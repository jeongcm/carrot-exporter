swagger: "2.0"
info:
  description: "This is nodejs portal nexclipper api."
  version: "1.0.0"
  title: "Swagger nexclipper"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
host: "nexclipper.com"
basePath: "/"
tags:
- name: users
  description: users API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/getAllUsers'
        500:
          description: 'Server Error'

# [POST] users
  /users/singup:
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/getUsers'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
        - name
        - firstName
        - lastName
        - mobile
        - photo
    properties:
      email:
        type: string
        description: user Email
        example: shrishti.test@gmail.com
      password:
        type: string
        description: user Password
        example: admin
      username:
        type: string
        description: username
        example: Shrishti
      firstName:
        type: string
        description: user firstName
        example: Shrishti
      lastName:
        type: string
        description: user lastname
        example: Raj
      mobile:
        type: string
        description: user mobile number
        example: 732947349
      photo:
        type: string
        description: user profile photo
        example: image1
  getUsers:
    type: object
    required:
        - id
    properties:
      id:
        type: string
        description: user uuid
        example: f9e28e11-08f1-4a35-b6c4-330531e36fd3
      email:
        type: string
        description: user Email
        example: shrishti.test@gmail.com
      username:
        type: string
        description: username
        example: Shrishti
      firstName:
        type: string
        description: user firstName
        example: Shrishti
      lastName:
        type: string
        description: user lastname
        example: Raj
      mobile:
        type: string
        description: user mobile number
        example: 732947349
      photo:
        type: string
        description: user profile photo
        example: image1
  getAllUsers:
    type: array
    items: 
      type: object
      properties:
            id:
              type: string
              description: user uuid
              example: f9e28e11-08f1-4a35-b6c4-330531e36fd3
            email:
              type: string
              description: user Email
              example: shrishti.test@gmail.com
            username:
              type: string
              description: username
              example: Shrishti
            firstName:
              type: string
              description: user firstName
              example: Shrishti
            lastName:
              type: string
              description: user lastname
              example: Raj
            mobile:
              type: string
              description: user mobile number
              example: 732947349
            photo:
              type: string
              description: user profile photo
              example: image1

schemes:
 - https
 - http
